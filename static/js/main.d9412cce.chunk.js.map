{"version":3,"sources":["App.js","index.js"],"names":["App","useState","openedCard","setOpenedCard","matched","setMatched","started","setStarted","firstRandom","setFirstRandom","secondRandom","setSecondRandom","pokemons","id","name","pokemons2","useEffect","sort","Math","random","pairOfPokemons","firstMatched","secondMatched","length","setTimeout","className","style","background","borderRadius","width","height","onClick","map","pokemon","index","isFlipped","includes","opened","flipCard","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAIe,SAASA,IAAO,IAAD,EACQC,mBAAS,IADjB,mBACrBC,EADqB,KACTC,EADS,OAEEF,mBAAS,IAFX,mBAErBG,EAFqB,KAEZC,EAFY,OAGGJ,oBAAS,GAHZ,mBAGrBK,EAHqB,KAGXC,EAHW,OAIQN,mBAAS,IAJjB,mBAIrBO,EAJqB,KAIRC,EAJQ,OAKUR,mBAAS,IALnB,mBAKrBS,EALqB,KAKPC,EALO,KAMtBC,EAAW,CACf,CAAEC,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,YACf,CAAED,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,aACf,CAACD,GAAG,GAAGC,KAAK,WACZ,CAACD,GAAG,EAAEC,KAAK,aAEPC,EAAY,CAChB,CAAEF,GAAI,EAAGC,KAAM,aACf,CAACD,GAAG,EAAEC,KAAK,YACX,CAAED,GAAI,EAAGC,KAAM,YACf,CAACD,GAAG,GAAGC,KAAK,WACZ,CAAED,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,cAKjBE,qBAAU,WACRP,EAAgBG,EAASK,MAAK,kBAAMC,KAAKC,SAAW,SACpD,IACFH,qBAAU,WACRL,EAAiBI,EAAUE,MAAK,kBAAMC,KAAKC,SAAW,SACtD,IAKF,IAAMC,EAAc,sBAAOZ,GAAP,YAAwBE,IAyD5C,OAnDAM,qBAAU,WACR,KAAId,EAAa,GAAjB,CAEA,IAAMmB,EAAeD,EAAelB,EAAW,IACzCoB,EAAgBF,EAAelB,EAAW,IAE5CoB,GAAiBD,EAAaR,KAAOS,EAAcT,IACrDR,EAAW,GAAD,mBAAKD,GAAL,CAAciB,EAAaR,MAGb,IAAtBX,EAAWqB,QAAcC,YAAW,kBAAMrB,EAAc,MAAK,QAChE,CAACD,IAyCF,qBAAKuB,UAAU,MAAf,SACE,qBAAKA,UAAU,QAAf,SAxCU,GAATnB,EAED,mCACA,2CAAa,wBAAQoB,MAAO,CAACC,WAAW,SAASC,aAAa,OAAOC,MAAM,OAAOC,OAAO,QAASC,QAAS,kBAAKxB,GAAW,IAA9G,mBAAb,sBAIA,mCACCa,EAAeY,KAAI,SAACC,EAASC,GAG5B,IAAIC,GAAY,EAIhB,OAFIjC,EAAWkC,SAASF,KAAQC,GAAY,GACxC/B,EAAQgC,SAASH,EAAQpB,MAAKsB,GAAY,GAE5C,qBACEV,UAAS,uBAAkBU,EAAY,UAAY,GAA1C,KAETJ,QAAS,kBApCnB,SAAkBG,GAChB/B,GAAc,SAACkC,GAAD,4BAAgBA,GAAhB,CAAwBH,OAmCfI,CAASJ,IAH1B,SAKE,sBAAKT,UAAU,QAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBACEc,IAAG,UAhFT,gDAgFS,YAAYN,EAAQpB,GAApB,QACH2B,IAAI,eACJX,MAAM,UAGV,qBAAKJ,UAAU,aAXZS,YCvEjBO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC3C,EAAD,MAEF4C,SAASC,eAAe,W","file":"static/js/main.d9412cce.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst url = \"https://pokeres.bastionbot.org/images/pokemon\";\n\nexport default function App() {\n  const [openedCard, setOpenedCard] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [started , setStarted] = useState(false);\n  const [firstRandom, setFirstRandom]=useState([])\n  const [secondRandom, setSecondRandom]=useState([])\n  const pokemons = [\n    { id: 1, name: \"balbasaur\" },\n    { id: 8, name: \"wartotle\" },\n    { id: 9, name: \"blastoise\" },\n    { id: 6, name: \"charizard\" },\n    {id:25,name:\"Pikachu\"},\n    {id:7,name:\"Squirtle\"},\n  ];\n  const pokemons2 = [\n    { id: 9, name: \"blastoise\" },\n    {id:7,name:\"Squirtle\"},\n    { id: 8, name: \"wartotle\" },\n    {id:25,name:\"Pikachu\"},\n    { id: 1, name: \"balbasaur\" },\n    { id: 6, name: \"charizard\" }\n  ];\n\n  \n  \n  useEffect(()=>{\n    setFirstRandom( pokemons.sort(() => Math.random() - 0.5))\n  },[])\n  useEffect(()=>{\n    setSecondRandom( pokemons2.sort(() => Math.random() - 0.5))\n  },[])\n \n  // console.log(firstRandom)\n  // console.log(secondRandom)\n  //currently there are 4 pokemons but we need the pair\n  const pairOfPokemons = [...firstRandom , ...secondRandom];\n\n  function flipCard(index) {\n    setOpenedCard((opened) => [...opened, index]);\n  }\n\n  useEffect(() => {\n    if (openedCard < 2) return;\n\n    const firstMatched = pairOfPokemons[openedCard[0]];\n    const secondMatched = pairOfPokemons[openedCard[1]];\n\n    if (secondMatched && firstMatched.id === secondMatched.id) {\n      setMatched([...matched, firstMatched.id]);\n    }\n\n    if (openedCard.length === 2) setTimeout(() => setOpenedCard([]), 1000);\n  }, [openedCard]);\n  function start(){\n    if(started==false){\n      return (\n      <>\n      <h1>Welcome, <button style={{background:\"orange\",borderRadius:\"50px\",width:\"50px\",height:\"50px\"}} onClick={()=> setStarted(true)}>Click</button> Here To Start</h1>\n      \n      </>\n    )}else{ return(\n      <>\n      {pairOfPokemons.map((pokemon, index) => {\n        //lets flip the card\n\n        let isFlipped = false;\n\n        if (openedCard.includes(index)) isFlipped = true;\n        if (matched.includes(pokemon.id)) isFlipped = true;\n        return (\n          <div\n            className={`pokemon-card ${isFlipped ? \"flipped\" : \"\"} `}\n            key={index}\n            onClick={() => flipCard(index)}\n          >\n            <div className=\"inner\">\n              <div className=\"front\">\n                <img\n                  src={`${url}/${pokemon.id}.png`}\n                  alt=\"pokemon-name\"\n                  width=\"100\"\n                />\n              </div>\n              <div className=\"back\"></div>\n            </div>\n          </div>\n        );\n      })}\n      </>\n    )\n    }\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"cards\">\n        {start()}        \n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}